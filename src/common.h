#ifndef __KLB_IMAGE_COMMON_H__
#define __KLB_IMAGE_COMMON_H__

typedef float  float32_t;
typedef double float64_t;

#define KLB_DATA_DIMS (5) //our images at the most have 5 dimensions: x,y,z, c, t
#define KLB_METADATA_SIZE (256) //number of bytes in metadata
#define KLB_DEFAULT_HEADER_VERSION (2) //def

// Following mylib conventions here are the data types
enum KLB_DATA_TYPE
{
	UINT8_TYPE = 0,
	UINT16_TYPE = 1,
	UINT32_TYPE = 2,
	UINT64_TYPE = 3,
	INT8_TYPE = 4,
	INT16_TYPE = 5,
	INT32_TYPE = 6,
	INT64_TYPE = 7,
	FLOAT32_TYPE = 8,
	FLOAT64_TYPE = 9
};

//Compression type look up table (add to the list if you use a different one)
//To add more compression types just add it here and look for 
//0xBBFFCCLL
//BB = Binary provider (Blosc = 0xFF)
//FF = Filter (Byte Shuffle, Bit Shuffle, Delta, etc.)
//CC = Compressor (LZ4, ZSTD, etc.)
//LL = Level
enum KLB_COMPRESSION_TYPE
{
	NONE = 0,
	BZIP2 = 1,
	ZLIB = 2,
	BLOSC_BLOSCLZ_L1         = 0xFF000001,
	BLOSC_LZ4_L1             = 0xFF000101,
	BLOSC_LZ4_L2             = 0xFF000102,
	BLOSC_LZ4_L3             = 0xFF000103,
	BLOSC_LZ4_L4             = 0xFF000104,
	BLOSC_LZ4_L5             = 0xFF000105,
	BLOSC_LZ4_L6             = 0xFF000106,
	BLOSC_LZ4_L7			 = 0xFF000107,
	BLOSC_LZ4_L8             = 0xFF000108,
	BLOSC_LZ4_L9             = 0xFF000109,
	BLOSC_LZ4_BYTESHUFFLE_L1 = 0xFF010101,
	BLOSC_LZ4_BYTESHUFFLE_L2 = 0xFF010102,
	BLOSC_LZ4_BYTESHUFFLE_L3 = 0xFF010103,
	BLOSC_LZ4_BYTESHUFFLE_L4 = 0xFF010104,
	BLOSC_LZ4_BYTESHUFFLE_L5 = 0xFF010105,
	BLOSC_LZ4_BYTESHUFFLE_L6 = 0xFF010106,
	BLOSC_LZ4_BYTESHUFFLE_L7 = 0xFF010107,
	BLOSC_LZ4_BYTESHUFFLE_L8 = 0xFF010108,
	BLOSC_LZ4_BYTESHUFFLE_L9 = 0xFF010109,
	BLOSC_LZ4_BITSHUFFLE_L1  = 0xFF020101,
	BLOSC_LZ4HC_L1           = 0xFF000201,
	BLOSC_SNAPPY_L1          = 0xFF000301,
	BLOSC_ZLIB_L1            = 0xFF000401,
	BLOSC_ZSTD_L1            = 0xFF000501,
	BLOSC_ZSTD_L2            = 0xFF000502,
	BLOSC_ZSTD_L3            = 0xFF000503,
	BLOSC_ZSTD_L4            = 0xFF000504,
	BLOSC_ZSTD_L5            = 0xFF000505,
	BLOSC_ZSTD_L6            = 0xFF000506,
	BLOSC_ZSTD_L7            = 0xFF000507,
	BLOSC_ZSTD_L8            = 0xFF000508,
	BLOSC_ZSTD_L9            = 0xFF000509,
	BLOSC_ZSTD_BYTESHUFFLE_L1= 0xFF010501,
	BLOSC_ZSTD_BYTESHUFFLE_L2= 0xFF010502,
	BLOSC_ZSTD_BYTESHUFFLE_L3= 0xFF010503,
	BLOSC_ZSTD_BYTESHUFFLE_L4= 0xFF010504,
	BLOSC_ZSTD_BYTESHUFFLE_L5= 0xFF010505,
	BLOSC_ZSTD_BYTESHUFFLE_L6= 0xFF010506,
	BLOSC_ZSTD_BYTESHUFFLE_L7= 0xFF010507,
	BLOSC_ZSTD_BYTESHUFFLE_L8= 0xFF010508,
	BLOSC_ZSTD_BYTESHUFFLE_L9= 0xFF010509,
	BLOSC_ZSTD_BITSHUFFLE_L1 = 0xFF010501,
	BLOSC_ZSTD_BITSHUFFLE_L2 = 0xFF010502,
	BLOSC_ZSTD_BITSHUFFLE_L3 = 0xFF010503,
	BLOSC_ZSTD_BITSHUFFLE_L4 = 0xFF010504,
	BLOSC_ZSTD_BITSHUFFLE_L5 = 0xFF010505,
	BLOSC_ZSTD_BITSHUFFLE_L6 = 0xFF010506,
	BLOSC_ZSTD_BITSHUFFLE_L7 = 0xFF010507,
	BLOSC_ZSTD_BITSHUFFLE_L8 = 0xFF010508,
	BLOSC_ZSTD_BITSHUFFLE_L9 = 0xFF010509
};

#endif